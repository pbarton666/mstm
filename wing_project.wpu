#!wing
#!version=5.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.breakpoints = {loc('analyze_main.py'): {168: (0,
        None,
        1,
        0),
        202: (0,
              None,
              1,
              0),
        245: (0,
              None,
              1,
              0)},
                     loc('study_hwy_trips.py'): {42: (0,
        None,
        1,
        0),
        60: (0,
             None,
             1,
             0)}}
debug.err-values = {None: {},
                    loc('a_db_test.py'): {},
                    loc('a_test.py'): {},
                    loc('build_one.py'): {},
                    loc('calc_delta_cs.py'): {},
                    loc('load_test_tables.py'): {},
                    loc('query_db.py'): {},
                    loc('test_query_db.py'): {}}
debug.show-args-dialog = {loc('a_db_test.py'): False,
                          loc('a_nother_test.py'): False,
                          loc('a_test.py'): False,
                          loc('analyze_main.py'): False,
                          loc('build_all.py'): False,
                          loc('build_all_numpy.py'): False,
                          loc('build_flat_files.py'): False,
                          loc('build_one.py'): False,
                          loc('build_tables.py'): False,
                          loc('calc_delta_cs.py'): False,
                          loc('create_pickle_files.py'): False,
                          loc('create_reporting_rollups.py'): False,
                          loc('database.py'): False,
                          loc('describe_db.py'): False,
                          loc('get_max_rows.py'): False,
                          loc('load_test_tables.py'): False,
                          loc('query_db.py'): False,
                          loc('study_hwy_trips.py'): False,
                          loc('sum_costs_from_db.py'): False,
                          loc('test.py'): False,
                          loc('test_all.py'): False,
                          loc('test_consolidate_tables.py'): False,
                          loc('test_db_contents.py'): False,
                          loc('test_db_loading.py'): False,
                          loc('test_me.py'): False,
                          loc('test_misc.py'): False,
                          loc('test_np_array.py'): False,
                          loc('test_pickle'): False,
                          loc('test_pickle.py'): False,
                          loc('test_query_db.py'): False,
                          loc('utils_and_settings.py'): False,
                          loc('unknown:untitled-14.py'): False}
edit.bookmarks = {'aggregate_hwy_costs': (loc('query_db.py'),
        {'attrib-starts': [('aggregate_hwy_costs',
                            360)],
         'first-line': 399,
         'sel-line': 411})}
edit.file-encoding = {loc('a_db_test.py'): 'UTF-8',
                      loc('a_nother_test.py'): 'UTF-8',
                      loc('a_test.py'): 'UTF-8',
                      loc('analyze_main.py'): 'UTF-8',
                      loc('build_flat_files.bak.py'): 'UTF-8',
                      loc('build_roll_up_tables.py'): 'UTF-8',
                      loc('calc_delta_cs'): 'UTF-8',
                      loc('consolidate_tables'): 'UTF-8',
                      loc('consolidate_tables.py'): 'UTF-8',
                      loc('create_pickle_files.py'): 'UTF-8',
                      loc('create_reporting_rollups.py'): 'UTF-8',
                      loc('describe_db.py'): 'UTF-8',
                      loc('get_max_rows.py'): 'UTF-8',
                      loc('query_db.bak.py'): 'UTF-8',
                      loc('study_hwy_trips.py'): 'UTF-8',
                      loc('sum_costs_from_db.py'): 'UTF-8',
                      loc('test.py'): 'UTF-8',
                      loc('test_all.py'): 'UTF-8',
                      loc('test_calc_delta_cs.py'): 'UTF-8',
                      loc('test_consolidate_tables.py'): 'UTF-8',
                      loc('test_db_contents'): 'UTF-8',
                      loc('test_db_contents.py'): 'UTF-8',
                      loc('test_me.py'): 'UTF-8',
                      loc('test_pickle'): 'UTF-8',
                      loc('test_pickle.py'): 'UTF-8',
                      loc('test_transpose.py'): 'UTF-8',
                      loc('value_constants.py'): 'UTF-8'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'DTKOdTFBsINdIy5ZPotHInUeya'\
        'LmovpU',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'hidden',
                 'notebook_percent': 0.0,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {u'By Module': {'expanded'\
        '-nodes': [],
        'selected-nodes': [],
        'top-node': None}},
                                'browse_mode': u'By Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [0,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.36387782204515273,
        'override_title': None,
        'pagelist': [('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': 1346,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'""',
                                       'fReverse': False,
                                       'fSearchText': u'print',
                                       'fStartPos': 1341,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': True,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-stack',
                      'wide',
                      0,
                      {'codeline-mode': 'below'}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [('eval',
        u'answer'),
                                       ('symbolic',
        ['mylist'])],
                       'tree-state': {'expanded-nodes': [(1,)],
                                      'selected-nodes': [(0,)],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 145,
                       'folded-linenos': [],
                       'history': {None: ['import numpy\n',
        'x=numpy.zeros((1197*11979, 167))\n\n',
        'x=numpy.zeros((1197*1179, 167))\n',
        'x=numpy.zeros((1197*1179, 200))\n',
        "if x:\n  print('x')\n\n",
        'x\n',
        'y\n',
        "if y:\n   print('y')\n\n",
        '__dict__\n',
        'junk\n',
        'dir(junk)\n',
        '__name__\n',
        "hasattr('__name__', 'junk')\n",
        'locals\n',
        'locals()\n',
        "locals.update('dogma':None)\n",
        "locals.update({}'dogma':None{})\n",
        "locals.update().update('dogma':None)\n",
        "locals.update().update({dogma':None)})\n",
        "locals.update().update({dogma':None})\n",
        'from datetime import datetime\n',
        'datetime.now(cls, tz)\n',
        'datetime.now()\n',
        's =datetime.now()\n',
        'f =datetime.now()\n',
        'f-s\n',
        'datetime.strftime("%b %d %Y %H:%M:%S", datetime.now())\n',
        'import time\n',
        'time.strftime("%b %d %Y %H:%M:%S", datetime.now())\n',
        'time.strftime("%b %d %Y %H:%M:%S", time.time())\n',
        'datetime.now().strftime("%b %d %Y %H:%M:%S")\n',
        'lst = [1,2,3,4]\n',
        'lst[1:3]\n',
        'lst[1:5]\n',
        'len(lst)\n',
        'lst[1:len(lst)]\n',
        'lst\n',
        '2100/5\n',
        '2100*5 / 60/60\n',
        'import cPickel\n',
        'import cPickle\n',
        "'UPDATE yesred_no_hwy_Inc1_NTDlta_Costs SET Inc1_WalkTime=240.0 WHE"\
        "RE zone=3.0'.lower()\n"]},
                       'launch-id': None,
                       'sel-line': 155,
                       'sel-line-start': 5376,
                       'selection_end': 5455,
                       'selection_start': 5377}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 0.5664939550949913,
                       'toolbox-tree-sel': ''}),
                     ('debug-probe',
                      'wide',
                      1,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 26,
                       'folded-linenos': [],
                       'history': {u'file:/home/pat/workspace/naacp/a_db_test.py': ['a'\
        'rr_dict\n',
        "'DROP TABLE IF EXISTS {}'.format(arr_dict[arr]['table'])\n",
        "'SELECT * from {} LIMIT 1'.format(arr_table)\n",
        "\"INSERT INTO {} ({}) VALUES ({}) WHERE {}=1\".format(arr_table, 'z"\
        "one', '-666', 'zone')\n",
        "curs.execute('CREATE TABLE {} ({} float PRIMARY KEY {})'.format('ju"\
        "nk', 'zone', 'zone'))\n",
        "curs.execute('CREATE TABLE {} ({} float ) PRIMARY KEY {}'.format(ar"\
        "r_table, 'zone', 'zone'))\n",
        "curs.execute('CREATE TABLE {} ({} float ) PRIMARY KEY ({})'.format("\
        "arr_table, 'zone', 'zone'))\n",
        "curs.execute('END')\n",
        "curs.execute('CREATE TABLE {} ({} float  PRIMARY KEY )'.format(arr_"\
        "table, 'zone', 'zone'))\n",
        "curs.execute('CREATE TABLE {} ({} float  PRIMARY KEY )'.format('jun"\
        "k', 'zone', 'zone'))\n",
        'curs.execute("ALTER TABLE {} ADD {} float".format(arr_table, arr_co'\
        'lumn))\n',
        'arr_data\n',
        "curs.execute('INSERT INTO dogma_table (dogma_col) VALUES (7.4) WHER"\
        "E zone=1.0')\n",
        "curs.execute('INSERT INTO dogma_table (dogma_col) VALUES (\"7.4\") "\
        "WHERE zone=1.0')\n",
        "curs.execute('INSERT INTO dogma_table (dogma_col) VALUES (7.4)')\n",
        "curs.execute('INSERT INTO dogma_table (dogma_col) VALUES (7.4) wher"\
        "e zone=1')\n",
        "curs.execute('select * from dogma_table where zone=1.0')\n",
        'c',
        "\"INSERT INTO {} ({}) VALUES ({}) WHERE {}={}\".format(arr_table, a"\
        "rr_column, row[1], 'zone', row[0])\n",
        "\"UPDATE {} SET {}={} WHERE {}={}\".format(arr_table, arr_column, r"\
        "ow[1], 'zone', row[0])\n",
        "curs.execute('select * from dogma_table')\n",
        'c = curs.fetchall()\n',
        'c\n',
        'test_data_1.tolist()\n',
        'x=[(1.0, 7.4), (2.0, 33.2), (3.0, 77.0)]\n',
        'list(x)\n',
        'test_data_1.tostring\n',
        'test_data_1.tostring()\n',
        'x\n',
        'np.array(x)\n',
        'c=[(1.0, 11.0), (2.0, 12.0), (3.0, 13.0)]\n',
        'np.array(c)\n',
        'test_data_1\n',
        'np.isclose(np.array(c), test_data_1)\n',
        'assert ( np.isclose(np.array(curs.fetchall()), test_data_1).all())'\
        '\n',
        'np.array(curs.fetchall())\n',
        "curs.execute('show processlist')\n",
        "curs.execute('end')\n",
        "curs.execute('select * from pg_stat_activity')\n",
        'res=curs.fetchall()\n',
        'res\n',
        'cs_delta = get_cs_delta(base_trips, test_trips, base_costs, test_co'\
        'sts)\n',
        'test_costs+test_trips\n',
        'print(len(test_trips), len(test_trips[1,:]))\n',
        'print(len(test_costs), len(test_costs[1:,]))\n',
        'print(test_costs[-1,1:3])\n',
        'print(test_costs[-1,1:4])\n',
        'print(test_costs[-2,1:4])\n',
        'test_costs[0:,-3]\n',
        'cost_per_trip[0:,:-3]\n',
        'cost_per_trip[0:,-3:]\n',
        'cost_per_trip[0:,-3]\n',
        'cost_per_trip[0,-3]\n',
        'cost_per_trip[0,-3:]\n',
        'cost_per_trip[1,-3:]\n',
        'len(cost_per_trip[0])\n',
        'cost_per_trip[0]\n'],
                                   u'file:/home/pat/workspace/naacp/a_test.py': ['a'\
        '+a.T\n',
        'a.T\n',
        'a.ravel()\n',
        'a.T.ravel()\n',
        'a.ravel.unravel()\n',
        'x=np.array(([a, b]))\n',
        'x\n',
        'rwa\n',
        'np.c_[ A, np.ones(N) ] \n',
        'A\n',
        '.5*(a+a)*(2a-a)\n',
        '.5*(a+a)*(2*a-a)\n',
        'numpy.sum(a, 0)\n',
        'np.sum(a, 0)\n',
        'np.sum(a, 1)\n',
        'a\n',
        'b.T\n',
        'b=a[:,0:1]\n',
        'b=a[1,]\n',
        'c=b[:,0:1]\n',
        'b\n',
        'trips[1:,1:]\n',
        'assert(base_trips==exp_trips)\n',
        'assert(trips_used==exp_trips)\n',
        'assert(trips_used.all()==exp_trips.all())\n',
        'trips\n',
        'base_costs\n',
        'test_costs\n',
        'base_trips\n',
        'test_trips\n',
        'base_cost_per_trip\n',
        'test_cost_per_trip\n',
        'benefits_by_zone\n',
        'np.sum(benefits_by_zone)\n',
        'npa[:,:-1]\n',
        'npa[:,0]\n',
        'npa is None\n',
        'vector\n',
        'np.array(([[ 1.,  11.],  [ 2.,  12.],  [ 3.,  13.],  [ 4.,  14.]]))'\
        '\n',
        'npa\n',
        'npa.all()\n',
        'cs_delta\n',
        'exp_cs_delta\n',
        'np.array_equal(cs_delta, exp_cs_delta)\n',
        'np.isclose(cs_delta, exp_cs_delta)\n',
        'np.isclose(cs_delta, exp_cs_delta).all()\n',
        'a=np.array(([1,2,3]))\n',
        'b=np.array(([0,1,2]))\n',
        'np.isclose(a, b)\n',
        'self.assertTrue( np.array_equal(cs_delta, exp_cs_delta).all())\n',
        'self.assertTrue( np.array_equal(cs_delta, exp_cs_delta)).all()\n',
        'self.assertTrue( np.isclose(cs_delta, exp_cs_delta)).all()\n',
        'self.assertTrue( np.isclose(cs_delta, exp_cs_delta).all())\n',
        'self.assertTrue( np.isclose(benefits_by_zone, exp_benefits_by_zone)'\
        '.all())\n',
        'costs\n',
        'exp_costs\n',
        'cost_per_trip\n',
        'cost_per_trip_used\n',
        'trips_used\n'],
                                   u'file:/home/pat/workspace/naacp/analyze_main.py': ['r'\
        'eader\n',
        'reader.fieldnames\n',
        'r=next(reader)\n',
        "r['TOD']\n",
        "r['Leg']\n",
        'next(reader)\n',
        'print(dmap.keys())\n',
        'aggregate_np\n',
        'np.ravel(cost)\n',
        'cost\n',
        'max(cost)\n',
        'np.sum(dest_cs_delta)\n',
        'np.sum(base_trips)\n',
        'np.sum(base_costs)\n',
        'np.sum(test_costs)\n',
        'np.sum(test_trips)\n',
        'np.sum(origin_cs_delta)\n',
        'base_trips\n',
        'arr_dict[arr_name]\n',
        "print('{} versus {}  {}  {}  base trips: {}  test trips: {}  base c"\
        "osts: {}  test costs: {}  dlta cs: {}'.format(\n\t\t\t\t         ba"\
        "se_name, test_name, line['mode'], line['cost'], np.sum(base_trips),"\
        " np.sum(test_trips),\n\t\t\t\t         np.sum(base_costs), np.sum(t"\
        "est_costs), np.sum(cs_delta)))\n\n",
        'arr_dict\n',
        'arr_dict.keys()\n',
        "x=arr_dict['transit_ride_time']\n",
        'x\n',
        'os.join(mappings.ROOT_DIR)\n',
        'os.path.join(mappings.ROOT_DIR)\n',
        "os.path.join(mappings.ROOT_DIR, subdir.split('|')[0])\n",
        "os.path.join(mappings.ROOT_DIR, subdir.split('|')[1])\n",
        "os.path.join(mappings.ROOT_DIR, subdir.split('|')[1], filename)\n",
        'import mappings\n',
        "dmap['dbtable']\n",
        "'{}-versus{}  {}  \\n {} \\n {}  base trips: {}  test trips: {}  su"\
        "m dlta cs: {}'.format(\n\t\t\t\t         base_name, test_name, \n\t"\
        "\t\t             dmap['trips'],\n\t\t\t             dmap['cost'],\n"\
        "\t\t\t             np.sum(base_trips), np.sum(test_trips),\n\t\t\t"\
        "            np.sum(cs_delta))\n\n",
        "'{}-versus{}  {}  \\n {} \\n {} \\ntrip file:  cost file \\n base t"\
        "rips: {}  test trips: {}  sum dlta cs: {}'.format(\n\t\t\t\t       "\
        "  base_name, test_name, \n\t\t\t             dmap['trips'],\n\t\t\t"\
        "             dmap['cost'],\n\t\t\t             np.sum(base_trips), "\
        "np.sum(test_trips),\n\t\t\t            np.sum(cs_delta))\n\n",
        "'{}-versus{}  {}  \\n {} \\n base trips: {}  test trips: {}  sum dl"\
        "ta cs: {}'.format(\n\t\t\t\t         base_name, test_name, \n\t\t\t"\
        "             dmap['trips'],\n\t\t\t             dmap['cost'],\n\t\t"\
        "\t             np.sum(base_trips), np.sum(test_trips),\n\t\t\t     "\
        "       np.sum(cs_delta))\n\n",
        "print('{}-versus{}  {}  \\n {} \\n {} \\ntrip file:  cost file \\n "\
        "base trips: {}  test trips: {}  sum dlta cs: {}'.format()\n\t\t\t\t"\
        "         base_name, test_name, \n\t\t\t             dmap['trips'],"\
        "\n\t\t\t             dmap['cost'],\n\t\t\t             np.sum(base_"\
        "trips), np.sum(test_trips),\n\t\t\t            np.sum(cs_delta))\n"\
        "\n",
        "print('{}-versus{}  {}  \\n {} \\n {} \\ntrip file:  cost file \\n "\
        "base trips: {}  test trips: {}  sum dlta cs: {}'.format()\n\t\t\t\t"\
        "         base_name, test_name, \n\t\t\t             dmap['trips'],"\
        "\n\t\t\t             dmap['cost'],\n\t\t\t             np.sum(base_"\
        "trips), np.sum(test_trips),\n\t\t\t            np.sum(cs_delta)))\n"\
        "\n",
        "print('{}-versus{}  {}  \\n {} \\n base trips: {}  test trips: {} "\
        "\\n sum dlta cs: {}'.format(\n                 base_name, test_name"\
        ", \n             dmap['trips'],\n             dmap['cost'],\n      "\
        "       np.sum(base_trips), np.sum(test_trips),\n            np.sum("\
        "cs_delta)))\n\n",
        "print('{}-versus{} \\n {}  \\n {} \\n base trips: {}  test trips: {"\
        "} \\n sum dlta cs: {}'.format(\n\t\t\t\t         base_name, test_na"\
        "me, \n\t\t\t             dmap['trips'],\n\t\t\t             dmap['c"\
        "ost'],\n\t\t\t             np.sum(base_trips), np.sum(test_trips),"\
        "\n\t\t\t            np.sum(cs_delta)))\n\n",
        "print('{}-versus{} \\n\\t {}  \\n\\t {} \\n\\t base trips: {}  test"\
        " trips: {} \\n\\t sum dlta cs: {}'.format(\n\t\t\t\t         base_n"\
        "ame, test_name, \n\t\t\t             dmap['trips'],\n\t\t\t        "\
        "     dmap['cost'],\n\t\t\t             np.sum(base_trips), np.sum(t"\
        "est_trips),\n\t\t\t            np.sum(cs_delta)))\n\n",
        "print('{}-versus{} \\n\\t {}  \\n\\t {} \\n\\t (summary stats - not"\
        " used in benefit calcs) base trips: {}  test trips: {}  sum dlta cs"\
        ": {}'.format(\n\t\t\t\t         base_name, test_name, \n\t\t\t     "\
        "        dmap['trips'],\n\t\t\t             dmap['cost'],\n\t\t\t   "\
        "          np.sum(base_trips), np.sum(test_trips),\n\t\t\t          "\
        "  np.sum(cs_delta)))\n\n",
        "print('{}-versus{} \\n\\t {}  \\n\\t {} \\n\\t base trips: {}  test"\
        " trips: {}  sum dlta cs: {}  (summary stats - not used in benefit c"\
        "alcs)'.format(\n\t\t\t\t         base_name, test_name, \n\t\t\t    "\
        "         dmap['trips'],\n\t\t\t             dmap['cost'],\n\t\t\t  "\
        "           np.sum(base_trips), np.sum(test_trips),\n\t\t\t         "\
        "   np.sum(cs_delta)))\n\n",
        "print('{}-versus{} \\n\\t {}  \\n\\t {} \\n\\t base trips: {}  test"\
        " trips: {}  sum dlta cs: {}  (summary stats - not used in benefit c"\
        "alcs)'.format(\n\t\t\t\t         base_name, test_name, \n\t\t\t    "\
        "         dmap['trips'],\n\t\t\t             dmap['cost'].split()[0]"\
        ",\n\t\t\t             np.sum(base_trips), np.sum(test_trips),\n\t\t"\
        "\t            np.sum(cs_delta)))\n\n",
        'from logger_setup import logger\n',
        "logger.debug('{}-versus{} \\n\\t {}  \\n\\t {} \\n\\t base trips: {"\
        "}  test trips: {}  sum dlta cs: {}  (summary stats - not used in be"\
        "nefit calcs)'.format(\n\t\t\t\t\t\tbase_name, test_name, \n\t\t\t\t"\
        "\t\tdmap['trips'],\n\t\t\t\t\t\tdmap['cost'].split()[0],\n\t\t\t\t"\
        "\t\tnp.sum(base_trips), np.sum(test_trips),\n\t\t\t\t\t\tnp.sum(cs_"\
        "delta)))\n\n",
        'vector\n',
        'npa\n',
        "arr_dict[arr_name]={ 'data': sum_col_to_np_array(npa=arr_dict[arr_n"\
        "ame]['data'], \n                                                   "\
        "                                  vector=benefits_by_zone, \n      "\
        "                                                                   "\
        "            max_index_val=len(base_trips)),\n                      "\
        "                    'column': column_name,\n                       "\
        "                    'table': table_name\n                          "\
        "                 }\n\n",
        'logger\n',
        'logger.handlers\n',
        'logger.level\n',
        "logger.debug('zz')\n",
        "logger.warning('xxx')\n",
        'str(elapsed)\n',
        "str(elapsed).split(':')[:-1]\n",
        "str(elapsed).split(':')\n",
        "str(elapsed).split(',')\n",
        "str(elapsed).split('.')\n",
        "str(elapsed).split('.')[0]\n",
        'dmap\n',
        "dmap['cost_file']\n",
        'line\n',
        "line['trips'].split()[0]\n",
        'len(test_costs)\n',
        'len(base_trips)\n',
        'len(test_trips)\n',
        'test_costs[-1,0]\n',
        'base_costs[-1,0]\n',
        'test_trips[-1,0]\n',
        'test_trips[-2,0]\n',
        'test_trips[-2:,0]\n',
        'test_trips[-3:,0]\n',
        'base_trips[-3:,0]\n',
        'len(cost_per_trip)\n',
        'ZONES\n',
        'len(cost_per_trip_used)\n',
        'len(trips_used)\n',
        'trips[-1:0]\n',
        'trips[-1,0]\n',
        'trips[-2,0]\n',
        'trips[-2:,0]\n',
        'base_trips_raw\n',
        'len(base_trips_raw\t)\n',
        'base_trips_file\n',
        'base_cost_file\n',
        'trips=trips[1:ZONES+1,1:ZONES+1]\n',
        'len(trips)\n',
        'len(base_costs)\n',
        'base_costs=test_costs\n',
        'base_costs==test_costs\n',
        'sum(base_tests)\n',
        'base_costs.sum()\n',
        'test_costs.sum()\n',
        'base_trips==test_trips\n',
        'np.equal(base_trips, test_trips).all()\n',
        'base_trips.sum()==test_trips.sum()\n',
        'cs_delta.sum()\n',
        'base_trips.sum()\n',
        'test_trips.sum()\n'],
                                   u'file:/home/pat/workspace/naacp/calc_delta_cs.py': ['t'\
        'opic\n',
        "cursor.execute('END')\n",
        '[scenarios[0]]\n',
        'scenarios[0]\n',
        'len(master_headers)\n',
        'type(master_headers)\n',
        'fn\n',
        "fn=fn+'_'\n",
        "fn=aggregated_test_yesred_nohwy'_data.csv'\n",
        "fn=''aggregated_test_yesred_nohwy+'_data.csv'\n",
        "fn=''aggregated_test_yesred_nohwy\"+'_data.csv'\n",
        "fn=''aggregated_test_yesred_nohwy_data.csv\"\n",
        "fn='aggregated_test_yesred_nohwy_data.csv'\n",
        "fn[:fn.find('_data')].replace('-', '_')\n",
        'master_headers\n',
        'from pprint import pprint as pp\n',
        'pp.sql()\n',
        'pp(sal)\n',
        'pp(sql)\n',
        'curs.copy_expert(sql=sql, file=fil)   \n',
        ' curs.execute(sql)\n',
        "np.savetxt(os.path.join(tempdir,data_fn), data, delimiter=',', head"\
        "er=\"|\".join(master_header), fmt=\"%s\")\n",
        "curs.execute('END')\n",
        'import pprint\n',
        'pprint.pprint(sql)\n',
        'type(sql)\n',
        "ss=sql.split(',')\n",
        'ss\n',
        "sq=sql.replace(',','\\n')\n",
        'sq\n',
        'print(sq)\n',
        'fil\n',
        'next(fil)\n',
        'fil.readline()\n',
        'fline=f.readlines()\n',
        'fline=fil.readlines()\n',
        'fline\n',
        'fline[1]\n',
        ' curs.copy_expert(sql=sql, file=fil) \n',
        'len(master_header)\n',
        'len(master_npa)\n',
        'len(master_npa[0])\n',
        'len(master_header[1][:-3])\n',
        'len(master_header[0][:-3])\n',
        'len(master_npa[0][:-3])\n',
        'x=master_npa[:,-(len(master_npa[0]-len(master_header)))]\n',
        'len(x[1])\n',
        'x[0]\n',
        'master_npa[0]-len(master_header)\n',
        'len(master_npa[0])-len(master_header)\n',
        'x=master_npa[:,:-len(master_npa[0])-len(master_header)]\n',
        'master_npa[:, :-3]\n',
        'xmaster_npa[:, :-3]\n',
        'xmaster_npa[:, :-3].x=\n',
        'x=master_npa[:, :-3]\n',
        'x\n',
        'cols_to_prune=len(headers)-len(master_npa)\n',
        'cols_to_prune=len(master_header)-len(master_npa)\n',
        'cols_to_prune=len(master_header)-len(master_npa[0])\n',
        'cols_to_prune\n',
        'x=master_npa[:,cols_to_prune]\n',
        'x=master_npa[:,:cols_to_prune]\n',
        'len(x[0])\n',
        ' curs.copy_expert(sql=sql, file=fil)    \n',
        'stmt.format(trips_table, purpose, income, tod, occupancy, \\\n     '\
        '                                                        metrics_tab'\
        'le, topic, occupancy, tod)\n\n',
        'stmt.format(trips_table, purpose, income, tod, occupancy,  metrics_'\
        'table, topic, occupancy, tod)\n\n',
        'print(stmt.format(trips_table, purpose, income, tod, occupancy,  me'\
        'trics_table, topic, occupancy, tod))\n',
        'stmt\n',
        "curs.execute('select * from test_nored_nohwy_trips_purpose_income_t"\
        "od_occ')\n",
        "curs.execute('select * from test_nored_nohwy_trips_purpose_income_t"\
        "od_occ.obo_inc1_am_sov')\n",
        'select\n',
        "curs.execute('select distince test_nored_nohwy_trips_purpose_income"\
        "_tod_occ.obo_inc1_am_sov from   test_nored_nohwy_trips_purpose_inco"\
        "me_tod_occ')\n",
        "curs.execute('select distinct test_nored_nohwy_trips_purpose_income"\
        "_tod_occ.obo_inc1_am_sov from   test_nored_nohwy_trips_purpose_inco"\
        "me_tod_occ')\n",
        "curs.execute('end')\n",
        'tempdir\n',
        'cols\n',
        'curs.copy_expert(sql=sql, file=fil)    curs.copy_expert(sql=sql, fi'\
        'le=fil)    \n',
        "sl = sql.replace(',', '\\n')\n",
        'sl\n',
        'print(sl)\n',
        'print(master_header)\n',
        'npa\n',
        'curs.copy_expert(sql=sql, file=fil) \n',
        'sql\n',
        'curs.copy_expert(sql=sql, file=fil)  \n',
        'lines=fil.readlines()\n',
        'lines[1]\n',
        'fil.seek(0)\n',
        'master_col\n',
        'master_header\n',
        'master_npa\n',
        'master_npa[0]\n',
        'curs.execute(select)\n',
        'print(select)\n',
        'a\n'],
                                   u'file:/home/pat/workspace/naacp/create_pickle_files.py': ['n'\
        'p.load(pfn)\n',
        'xx=np.load(pfn)\n',
        'xx\n',
        'len(xx)\n',
        'len(xx[0])\n',
        'os.listdir(this_root_dir)\n'],
                                   u'file:/home/pat/workspace/naacp/create_reporting_rollups.py': ['l'\
        'en(base_trips)\n',
        'len(test_trips)\n',
        'len (base_costs)\n',
        'base_cost_file\n',
        'len (base_costs[1])\n',
        'lst=[0,1,2,3,4]\n',
        'lst[:-1]\n',
        'lst():4)\n',
        'lst[0:4]\n',
        'lst{1:4}\n',
        'lst[1:4]\n',
        'ls\n',
        'lst\n',
        'lst[1:-1]\n',
        'lst[:4]\n',
        'ZONES\n',
        'base_trips.sum()\n',
        'test_trips.sum()\n',
        'total_cost_delta.sum()\n'],
                                   u'file:/home/pat/workspace/naacp/study_hwy_trips.py': ['m'\
        'ode_trips.sum()\n',
        'hwy_trip_files.sum()\n',
        'os.path.join(hwy_dir, tod_trip_files[0])\n',
        'os.path.join(mode_dir, work_hwy_trips_files[0]))\n',
        'os.path.join(mode_dir, work_hwy_trips_files[0])\n'],
                                   u'file:/home/pat/workspace/naacp/sum_costs_from_db.py': ['a'\
        '=total[0]\n',
        'a[0]\n',
        'a=total[0][0]\n',
        'a\n',
        'arr_dict\n',
        'pp(arr_dict)\n'],
                                   u'file:/home/pat/workspace/naacp/test_all.py': ['o'\
        's.path.join(temp_dir, fn))\n\n',
        'os.path.join(temp_dir, fn)\n',
        "dmap['cost_file']\n",
        'line\n',
        'pp(line)\n',
        'pp(dma)\n',
        'pp(dmap)\n',
        'hov_adj\n',
        'len(hov_adj)\n',
        'location.split(os.path.sep)\n',
        'location.split(os.path.sep)[:-1]\n',
        'os.path.sep.join(location.split(os.path.sep)[:-1])\n',
        "subdir_name.split('|')\n",
        'os.path.exists(base_dir)\n',
        'os.listdir(base_dir)\n',
        "os.path.exists('/home/pat/workspace/mstm_test/MSTM_Output_2030_NoRe"\
        "dLine - NoHwyImprovements/')\n",
        "dmap['trip_file']\n\n",
        'os.path.join(subdir, fn)\n',
        "base_cost_file=='/home/pat/workspace/mstm_test/MSTM_Output_2030_NoR"\
        "edLine - NoHwyImprovements/TRANSIT_OD_TimeCost/TRANSIT_PK_WexpBus_W"\
        "alkTime.csv '\n",
        "base_cost_file=='/home/pat/workspace/mstm_test/MSTM_Output_2030_NoR"\
        "edLine - NoHwyImprovements/TRANSIT_OD_TimeCost/TRANSIT_PK_WexpBus_W"\
        "alkTime.csv '.strip()\n",
        "os.path.exists('/home/pat/workspace/mstm_test/MSTM_Output_2030_NoRe"\
        "dLine - NoHwyImprovements/TRANSIT_OD_TimeCost')\n",
        "os.listdir('/home/pat/workspace/mstm_test/MSTM_Output_2030_NoRedLin"\
        "e - NoHwyImprovements/TRANSIT_OD_TimeCost')\n",
        'import test_all\n',
        "os.path.exists('/home/pat/workspace/mstm_test/MSTM_Output_2030_NoRe"\
        "dLine - NoHwyImprovements/TRANSIT_OD_TimeCost/TRANSIT_PK_WexpBus_Wa"\
        "lkTime.csv')\n",
        "subdir_name.split('|')[1] \n",
        'base_trips_file\n',
        'os.path.exists(MODE_HBW_Inc1_DA.csv)\n',
        "os.path.exists('MODE_HBW_Inc1_DA.csv')\n",
        'os.path.exists(base_cost_file)\n',
        'os.path.exists(base_trips_file)\n',
        'base_cost_file\n',
        'pp(arr_dict)\n',
        ' test_trips*test_costs - base_trips*base_costs\n',
        'base_costs\n',
        'test_trips\n',
        'cost_per_trip_used\n'],
                                   u'file:/home/pat/workspace/naacp/test_consolidate_tables.py': ['p'\
        'urpose_id*1000000 + income_id *100000 + tod_id * 10000 + occupancy_'\
        'id +1000+ scenario_id * 100 + row * 10 + col\n',
        'file_name\n'],
                                   u'file:/home/pat/workspace/naacp/test_pickle.py': ['n'\
        'pa==npa_p\n',
        'npa[0,0]\n',
        'npa_p[0,0]\n']},
                       'launch-id': None,
                       'sel-line': 33,
                       'sel-line-start': 833,
                       'selection_end': 833,
                       'selection_start': 833})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('test_all.py'),
        {'attrib-starts': [],
         'first-line': 106,
         'folded-linenos': [],
         'sel-line': 122,
         'sel-line-start': 5650,
         'selection_end': 5652,
         'selection_start': 5652},
        1449681806.468602],
        [loc('sum_costs_from_db.py'),
         {'attrib-starts': [],
          'first-line': 18,
          'folded-linenos': [],
          'sel-line': 35,
          'sel-line-start': 865,
          'selection_end': 870,
          'selection_start': 870},
         1449681819.407978],
        [loc('test_all.py'),
         {'attrib-starts': [],
          'first-line': 130,
          'folded-linenos': [],
          'sel-line': 147,
          'sel-line-start': 8141,
          'selection_end': 8141,
          'selection_start': 8141},
         1449682249.159175],
        [loc('sum_costs_from_db.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 55,
          'sel-line-start': 1488,
          'selection_end': 1513,
          'selection_start': 1513},
         1449682475.624129],
        [loc('test_all.py'),
         {'attrib-starts': [],
          'first-line': 135,
          'folded-linenos': [],
          'sel-line': 146,
          'sel-line-start': 8088,
          'selection_end': 8214,
          'selection_start': 8214},
         1449682599.9417],
        [loc('analyze_main.py'),
         {'attrib-starts': [('prep_data',
                             78)],
          'first-line': 76,
          'folded-linenos': [50,
                             104,
                             108,
                             279,
                             336,
                             343,
                             351],
          'sel-line': 88,
          'sel-line-start': 3219,
          'selection_end': 3219,
          'selection_start': 3219},
         1449682606.617663],
        [loc('analyze_main.py'),
         {'attrib-starts': [('get_full_filename',
                             112)],
          'first-line': 93,
          'folded-linenos': [50,
                             104,
                             108,
                             279,
                             336,
                             343,
                             351],
          'sel-line': 114,
          'sel-line-start': 4131,
          'selection_end': 4138,
          'selection_start': 4133},
         1449682608.313337],
        [loc('analyze_main.py'),
         {'attrib-starts': [('main',
                             126)],
          'first-line': 116,
          'folded-linenos': [50,
                             104,
                             108,
                             279,
                             336,
                             343,
                             351],
          'sel-line': 131,
          'sel-line-start': 4896,
          'selection_end': 4902,
          'selection_start': 4897},
         1449682613.022028],
        [loc('analyze_main.py'),
         {'attrib-starts': [('main',
                             126)],
          'first-line': 234,
          'folded-linenos': [50,
                             104,
                             108,
                             279,
                             336,
                             343,
                             351],
          'sel-line': 249,
          'sel-line-start': 11380,
          'selection_end': 11386,
          'selection_start': 11381},
         1449682615.727539],
        [loc('analyze_main.py'),
         {'attrib-starts': [('store_data',
                             253)],
          'first-line': 270,
          'folded-linenos': [50,
                             104,
                             108,
                             279,
                             336,
                             343,
                             351],
          'sel-line': 288,
          'sel-line-start': 12910,
          'selection_end': 12920,
          'selection_start': 12915},
         1449682617.59871],
        [loc('analyze_main.py'),
         {'attrib-starts': [('store_data',
                             253)],
          'first-line': 279,
          'folded-linenos': [50,
                             104,
                             108,
                             279,
                             336,
                             343,
                             351],
          'sel-line': 292,
          'sel-line-start': 13084,
          'selection_end': 13094,
          'selection_start': 13089},
         1449682619.350979],
        [loc('analyze_main.py'),
         {'attrib-starts': [('store_data',
                             253)],
          'first-line': 297,
          'folded-linenos': [50,
                             104,
                             108,
                             279,
                             336,
                             343,
                             351],
          'sel-line': 312,
          'sel-line-start': 13899,
          'selection_end': 13909,
          'selection_start': 13904},
         1449682620.570361],
        [loc('analyze_main.py'),
         {'attrib-starts': [('store_data',
                             253)],
          'first-line': 310,
          'folded-linenos': [50,
                             104,
                             108,
                             279,
                             336,
                             343,
                             351],
          'sel-line': 330,
          'sel-line-start': 14443,
          'selection_end': 14447,
          'selection_start': 14447},
         1449682627.360725],
        [loc('analyze_main.py'),
         {'attrib-starts': [('store_data',
                             253)],
          'first-line': 320,
          'folded-linenos': [50,
                             104,
                             108,
                             279,
                             336,
                             343,
                             351],
          'sel-line': 330,
          'sel-line-start': 14443,
          'selection_end': 14452,
          'selection_start': 14447},
         1449682629.059106],
        [loc('analyze_main.py'),
         {'attrib-starts': [],
          'first-line': 16,
          'folded-linenos': [50,
                             104,
                             108,
                             279,
                             336,
                             343,
                             351],
          'sel-line': 30,
          'sel-line-start': 1237,
          'selection_end': 1237,
          'selection_start': 1237},
         1449682767.241885],
        [loc('create_reporting_rollups.py'),
         {'attrib-starts': [('main',
                             38)],
          'first-line': 110,
          'folded-linenos': [],
          'sel-line': 126,
          'sel-line-start': 5751,
          'selection_end': 5751,
          'selection_start': 5751},
         1449682771.271969],
        [loc('create_reporting_rollups.py'),
         {'attrib-starts': [('main',
                             38)],
          'first-line': 167,
          'folded-linenos': [],
          'sel-line': 177,
          'sel-line-start': 8786,
          'selection_end': 8792,
          'selection_start': 8787},
         1449682774.505957],
        [loc('create_reporting_rollups.py'),
         {'attrib-starts': [],
          'first-line': 15,
          'folded-linenos': [],
          'sel-line': 20,
          'sel-line-start': 937,
          'selection_end': 948,
          'selection_start': 943},
         1449682775.484458],
        [loc('create_reporting_rollups.py'),
         {'attrib-starts': [],
          'first-line': 15,
          'folded-linenos': [],
          'sel-line': 20,
          'sel-line-start': 937,
          'selection_end': 962,
          'selection_start': 957},
         1449682776.210147],
        [loc('create_reporting_rollups.py'),
         {'attrib-starts': [],
          'first-line': 26,
          'folded-linenos': [],
          'sel-line': 35,
          'sel-line-start': 1371,
          'selection_end': 1373,
          'selection_start': 1373},
         1449683646.980097]],
        20),
        'current-loc': loc('sum_costs_from_db.py'),
        'editor-state-list': [(loc('analyze_main.py'),
                               {'attrib-starts': [],
                                'first-line': 16,
                                'folded-linenos': [50,
        104,
        108,
        279,
        336,
        343,
        351],
                                'sel-line': 30,
                                'sel-line-start': 1237,
                                'selection_end': 1237,
                                'selection_start': 1237}),
                              (loc('a_db_test.py'),
                               {'attrib-starts': [('prep_data',
        5)],
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 11,
                                'sel-line-start': 862,
                                'selection_end': 901,
                                'selection_start': 901}),
                              (loc('a_test.py'),
                               {'attrib-starts': [('Tests',
        8),
        ('Tests.test_cost_array_math',
         9)],
                                'first-line': 15,
                                'folded-linenos': [],
                                'sel-line': 13,
                                'sel-line-start': 308,
                                'selection_end': 841,
                                'selection_start': 308}),
                              (loc('create_pickle_files.py'),
                               {'attrib-starts': [('check_same',
        13)],
                                'first-line': 18,
                                'folded-linenos': [],
                                'sel-line': 33,
                                'sel-line-start': 771,
                                'selection_end': 793,
                                'selection_start': 793}),
                              (loc('create_reporting_rollups.py'),
                               {'attrib-starts': [],
                                'first-line': 26,
                                'folded-linenos': [],
                                'sel-line': 35,
                                'sel-line-start': 1371,
                                'selection_end': 1373,
                                'selection_start': 1373}),
                              (loc('logger_setup.py'),
                               {'attrib-starts': [],
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 6,
                                'sel-line-start': 113,
                                'selection_end': 160,
                                'selection_start': 160}),
                              (loc('mappings.py'),
                               {'attrib-starts': [],
                                'first-line': 9,
                                'folded-linenos': [],
                                'sel-line': 22,
                                'sel-line-start': 671,
                                'selection_end': 694,
                                'selection_start': 694}),
                              (loc('study_hwy_trips.py'),
                               {'attrib-starts': [],
                                'first-line': 26,
                                'folded-linenos': [],
                                'sel-line': 41,
                                'sel-line-start': 1430,
                                'selection_end': 1430,
                                'selection_start': 1430}),
                              (loc('sum_costs_from_db.py'),
                               {'attrib-starts': [],
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 55,
                                'sel-line-start': 1488,
                                'selection_end': 1513,
                                'selection_start': 1513}),
                              (loc('test_all.py'),
                               {'attrib-starts': [],
                                'first-line': 135,
                                'folded-linenos': [],
                                'sel-line': 146,
                                'sel-line-start': 8088,
                                'selection_end': 8214,
                                'selection_start': 8214}),
                              (loc('test_pickle.py'),
                               {'attrib-starts': [('open_convert_dump',
        8)],
                                'first-line': 6,
                                'folded-linenos': [],
                                'sel-line': 10,
                                'sel-line-start': 262,
                                'selection_end': 282,
                                'selection_start': 263})],
        'has-focus': True,
        'locked': False},
        [loc('analyze_main.py'),
         loc('a_db_test.py'),
         loc('a_test.py'),
         loc('create_pickle_files.py'),
         loc('create_reporting_rollups.py'),
         loc('logger_setup.py'),
         loc('mappings.py'),
         loc('study_hwy_trips.py'),
         loc('sum_costs_from_db.py'),
         loc('test_all.py'),
         loc('test_pickle.py')]),
                               'open_files': [u'logger_setup.py',
        u'test_pickle.py',
        u'a_db_test.py',
        u'create_pickle_files.py',
        u'a_test.py',
        u'mappings.py',
        u'study_hwy_trips.py',
        u'test_all.py',
        u'analyze_main.py',
        u'create_reporting_rollups.py',
        u'sum_costs_from_db.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.17222222222222222},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (1604,
                         279,
                         1272,
                         549)}]}
guimgr.recent-documents = [loc('sum_costs_from_db.py'),
                           loc('create_reporting_rollups.py'),
                           loc('analyze_main.py'),
                           loc('test_all.py'),
                           loc('study_hwy_trips.py'),
                           loc('mappings.py'),
                           loc('a_test.py'),
                           loc('create_pickle_files.py'),
                           loc('a_db_test.py'),
                           loc('test_pickle.py'),
                           loc('logger_setup.py')]
guimgr.visual-state = {loc('../../../junk/naacp/build_flat_files.py'): {'att'\
        'rib-starts': [('build_flat_files',
                        32)],
        'first-line': 45,
        'folded-linenos': [],
        'sel-line': 62,
        'sel-line-start': 2409,
        'selection_end': 2455,
        'selection_start': 2455},
                       loc('../../miniconda3/envs/mary/lib/python3.5/site-packages/numpy/lib/npyio.py'): {'a'\
        'ttrib-starts': [('genfromtxt',
                          1256)],
        'first-line': 1775,
        'folded-linenos': [],
        'sel-line': 1780,
        'sel-line-start': 63711,
        'selection_end': 63711,
        'selection_start': 63711},
                       loc('../../miniconda3/envs/mary/lib/python3.5/socket.py'): {'a'\
        'ttrib-starts': [('create_connection',
                          672)],
        'first-line': 695,
        'folded-linenos': [],
        'sel-line': 706,
        'sel-line-start': 25522,
        'selection_end': 25522,
        'selection_start': 25522},
                       loc('../../miniconda3/envs/p32/lib/python3.4/site-packages/psycopg2/__init__.py'): {'a'\
        'ttrib-starts': [('connect',
                          101)],
        'first-line': 157,
        'folded-linenos': [],
        'sel-line': 163,
        'sel-line-start': 5660,
        'selection_end': 5660,
        'selection_start': 5660},
                       loc('README.md'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 26,
        'sel-line-start': 1475,
        'selection_end': 1493,
        'selection_start': 1493},
                       loc('a_nother_test.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 172,
        'selection_end': 180,
        'selection_start': 180},
                       loc('build_all.py'): {'attrib-starts': [],
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 30,
        'sel-line-start': 1949,
        'selection_end': 1992,
        'selection_start': 1992},
                       loc('build_all_numpy.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('build_flat.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('build_flat_files.bak.py'): {'attrib-starts': [('b'\
        'uild_flat_files',
        32)],
        'first-line': 98,
        'folded-linenos': [],
        'sel-line': 117,
        'sel-line-start': 4853,
        'selection_end': 4853,
        'selection_start': 4853},
                       loc('build_flat_files.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('build_one.py'): {'attrib-starts': [],
        'first-line': 10,
        'folded-linenos': [],
        'sel-line': 49,
        'sel-line-start': 2152,
        'selection_end': 2172,
        'selection_start': 2172},
                       loc('build_roll_up_tables.py'): {'attrib-starts': [('m'\
        'ake_rollup_tables',
        91)],
        'first-line': 18,
        'folded-linenos': [],
        'sel-line': 103,
        'sel-line-start': 3399,
        'selection_end': 3432,
        'selection_start': 3432},
                       loc('build_tables.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('calc_delta_cs.py'): {'attrib-starts': [('add_to_'\
        'master',
        690)],
        'first-line': 666,
        'folded-linenos': [835,
                           947],
        'sel-line': 690,
        'sel-line-start': 40161,
        'selection_end': 40178,
        'selection_start': 40165},
                       loc('consolidate_tables.py'): {'attrib-starts': [],
        'first-line': 18,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 883,
        'selection_end': 924,
        'selection_start': 924},
                       loc('database.py'): {'attrib-starts': [],
        'first-line': 3,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 92,
        'selection_end': 114,
        'selection_start': 114},
                       loc('database_info.txt'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 818,
        'selection_start': 0},
                       loc('describe_db.py'): {'attrib-starts': [('describe_'\
        'db',
        7)],
        'first-line': 30,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 309,
        'selection_end': 825,
        'selection_start': 309},
                       loc('get_max_rows.py'): {'attrib-starts': [],
        'first-line': 13,
        'folded-linenos': [],
        'sel-line': 23,
        'sel-line-start': 464,
        'selection_end': 464,
        'selection_start': 464},
                       loc('load_test_tables.py'): {'attrib-starts': [],
        'first-line': 258,
        'folded-linenos': [0],
        'sel-line': 53,
        'sel-line-start': 1890,
        'selection_end': 2037,
        'selection_start': 2037},
                       loc('logger_setup.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 409,
        'selection_end': 460,
        'selection_start': 460},
                       loc('query_db.bak.py'): {'attrib-starts': [],
        'first-line': 441,
        'folded-linenos': [],
        'sel-line': 466,
        'sel-line-start': 24772,
        'selection_end': 24772,
        'selection_start': 24772},
                       loc('query_db.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('test.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 14,
        'selection_end': 59,
        'selection_start': 59},
                       loc('test_calc_delta_cs.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 22,
        'sel-line-start': 655,
        'selection_end': 694,
        'selection_start': 669},
                       loc('test_consolidate_tables.py'): {'attrib-starts': [('b'\
        'uild_test_files',
        14)],
        'first-line': 30,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 680,
        'selection_end': 758,
        'selection_start': 758},
                       loc('test_db_contents.py'): {'attrib-starts': [],
        'first-line': 94,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 5341,
        'selection_start': 0},
                       loc('test_db_loading.py'): {'attrib-starts': [('teste'\
        'r',
        64),
        ('tester.test_load_with_copy_partitioned',
         217)],
        'first-line': 224,
        'folded-linenos': [],
        'sel-line': 245,
        'sel-line-start': 10954,
        'selection_end': 10997,
        'selection_start': 10997},
                       loc('test_me.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 69,
        'selection_end': 72,
        'selection_start': 72},
                       loc('test_misc.py'): {'attrib-starts': [('test_me',
        5),
        ('test_me.test_get_window',
         71)],
        'first-line': 64,
        'folded-linenos': [],
        'sel-line': 71,
        'sel-line-start': 2986,
        'selection_end': 3872,
        'selection_start': 2986},
                       loc('test_query_db.py'): {'attrib-starts': [('TestQue'\
        'ries',
        24),
        ('TestQueries.test_fare_rollup',
         26)],
        'first-line': 102,
        'folded-linenos': [],
        'sel-line': 71,
        'sel-line-start': 2274,
        'selection_end': 2341,
        'selection_start': 2341},
                       loc('test_transpose.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('utilities.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('utils_and_settings.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('value_constants.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../naacp_old/analyze_main.py'): {'attrib-starts': [],
        'first-line': 15,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../naacp_old/build_tables.py'): {'attrib-starts': [('b'\
        'uild_tables',
        30)],
        'first-line': 39,
        'folded-linenos': [],
        'sel-line': 58,
        'sel-line-start': 1947,
        'selection_end': 1990,
        'selection_start': 1950},
                       loc('../psycopg2/doc/src/connection.rst'): {'attrib-s'\
        'tarts': [],
        'first-line': 531,
        'folded-linenos': [],
        'sel-line': 539,
        'sel-line-start': 21482,
        'selection_end': 21534,
        'selection_start': 21534},
                       loc('../psycopg2/psycopg/connection.h'): {'attrib-sta'\
        'rts': [],
        'first-line': 154,
        'folded-linenos': [],
        'sel-line': 100,
        'sel-line-start': 3484,
        'selection_end': 3529,
        'selection_start': 3529},
                       loc('../psycopg2/psycopg/connection_int.c'): {'attrib'\
        '-starts': [],
        'first-line': 754,
        'folded-linenos': [],
        'sel-line': 594,
        'sel-line-start': 15689,
        'selection_end': 15729,
        'selection_start': 15713},
                       loc('../psycopg2/psycopg/connection_type.c'): {'attri'\
        'b-starts': [],
        'first-line': 795,
        'folded-linenos': [],
        'sel-line': 803,
        'sel-line-start': 22500,
        'selection_end': 22526,
        'selection_start': 22501}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('custom',
                        [u''])}
proj.pyexec = {None: ('custom',
                      u'/home/pat/miniconda3/envs/mary/bin/python')}
search.replace-history = [u'self.curs',
                          u'self.self.curs',
                          u'self.conn']
search.search-history = [u'print',
                         u"' '",
                         u'" "',
                         u'create_empty_np_array',
                         u'matrix_size',
                         u'get_costs',
                         u'build_all',
                         u'purpose_rount_trip_flag',
                         u'bust',
                         u'fares',
                         u'__',
                         u'times',
                         u'pp',
                         u'master_headers.append',
                         u'fares_table',
                         u'master_npa',
                         u" if occupancy=='da'",
                         u'OperationalError',
                         u'PGSQL',
                         u' Unix domain socket']
testing.stored-results = (1,
                          [],
                          {})
